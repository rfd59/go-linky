# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Release

on:
  push:
    tags:
      - '*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Install dependencies
        run: |
          go mod download

      - name: Build
        run: go build ./...

      - name: Run Uniting-Tests
        run: go test ./cmd/...


  cd-docker:
    name: Docker
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
     
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.IMAGE_NAME}}:${{ github.ref_name }}, ${{ vars.IMAGE_NAME}}:latest


  cd-assets:
    name: Assets
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          
  report:
    name: Codecov
    needs: [cd-docker, cd-assets]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Install dependencies
        run: |
          go mod download
          go install github.com/jstemmer/go-junit-report/v2@latest
 
      - name: Run tests
        run: |
          go test -v -coverprofile=coverage.out ./cmd/... | go-junit-report -set-exit-code > junit.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: rfd59/go-linky