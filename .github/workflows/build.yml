# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Build

on:
  push:
    branches-ignore: [main]
  pull_request:

jobs:

  ci:
    name: Continous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: |
          go mod download
          go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: |
          go test -v -coverprofile=coverage.out ./cmd/... | go-junit-report -set-exit-code > junit.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: rfd59/go-linky

  cd-docker:
    name: Continous Delivry - Docker
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3

  cd-artifacts:
    name: Continous Delivry - Artifacts
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: echo Artifact