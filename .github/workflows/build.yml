# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Build

on:
  push:
    branches-ignore: [main]
  pull_request:

jobs:

  ci:
    name: Continous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: |
          go mod download
          go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Build
        run: go build -v ./...

      - name: Run Uniting-Tests
        run: |
          go test -v ./cmd/...
      
      - name: Publish Uniting-Tests
        run: |
          npx github-actions-ctrf summary ctrf-report.json
          npx github-actions-ctrf failed ctrf-report.json
        if: always()

      # - name: Run tests
      #   run: |
      #     go test -v -coverprofile=coverage.out ./cmd/... | go-junit-report -set-exit-code > junit.xml

      # - name: Upload test results to Codecov
      #   if: ${{ !cancelled() }}
      #   uses: codecov/test-results-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     slug: rfd59/go-linky

  # cd-docker:
  #   name: Continous Delivry - Docker
  #   needs: ci
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log into registry
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKERHUB_PASS }}
     
  #     - name: Build and push
  #       uses: docker/build-push-action@v6
  #       with:
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: rfd59/go-linky:snapshot

  cd-assets:
    name: Continous Delivry - Assets
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: go-linky
          path: dist/*